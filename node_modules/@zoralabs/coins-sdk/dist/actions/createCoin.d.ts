import { coinFactoryABI as zoraFactoryImplABI } from "@zoralabs/protocol-deployments";
import { Address, TransactionReceipt, WalletClient, SimulateContractParameters, ContractEventArgsFromTopics, Account } from "viem";
import { GenericPublicClient } from "src/utils/genericPublicClient";
import { ValidMetadataURI } from "src/metadata";
export type CoinDeploymentLogArgs = ContractEventArgsFromTopics<typeof zoraFactoryImplABI, "CoinCreatedV4">;
export declare enum DeployCurrency {
    ZORA = 1,
    ETH = 2
}
export type CreateCoinArgs = {
    name: string;
    symbol: string;
    uri: ValidMetadataURI;
    chainId: number;
    owners?: Address[];
    payoutRecipient: Address;
    platformReferrer?: Address;
    currency?: DeployCurrency;
};
export declare function createCoinCall({ name, symbol, uri, owners, payoutRecipient, currency, chainId, platformReferrer, }: CreateCoinArgs): Promise<SimulateContractParameters<typeof zoraFactoryImplABI, "deploy">>;
/**
 * Gets the deployed coin address from transaction receipt logs
 * @param receipt Transaction receipt containing the CoinCreated event
 * @returns The deployment information if found
 */
export declare function getCoinCreateFromLogs(receipt: TransactionReceipt): CoinDeploymentLogArgs | undefined;
export declare function createCoin(call: CreateCoinArgs, walletClient: WalletClient, publicClient: GenericPublicClient, options?: {
    gasMultiplier?: number;
    account?: Account | Address;
}): Promise<{
    hash: `0x${string}`;
    receipt: any;
    address: `0x${string}` | undefined;
    deployment: {
        caller: `0x${string}`;
        payoutRecipient: `0x${string}`;
        platformReferrer: `0x${string}`;
        currency: `0x${string}`;
        uri: string;
        name: string;
        symbol: string;
        coin: `0x${string}`;
        poolKey: {
            currency0: `0x${string}`;
            currency1: `0x${string}`;
            fee: number;
            tickSpacing: number;
            hooks: `0x${string}`;
        };
        poolKeyHash: `0x${string}`;
        version: string;
    } | undefined;
}>;
//# sourceMappingURL=createCoin.d.ts.map